# # from telegram import Update
# # from telegram.ext import Application, CommandHandler, ContextTypes

# # TOKEN = "8470587261:AAFSLT4uWXd9iuC-r5wv1XwEHvv8L4qI-AQ"  # token bot c·ªßa b·∫°n

# # # /start
# # async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
# #     await update.message.reply_text("Nh·∫≠p theo c√∫ ph√°p: /nhap <T√™nNg∆∞·ªùiD√πng> <T√†iKho·∫£n> <S·ªëNguy√™n>")

# # # /nhap
# # async def nhap(update: Update, context: ContextTypes.DEFAULT_TYPE):
# #     if len(context.args) < 3:
# #         await update.message.reply_text("Sai c√∫ ph√°p! /nhap <T√äN NG∆Ø∆†ÃÄI DUÃÄNG> <T√äN TK> <M√äÃ£NH GIAÃÅ TI√äÃÄN>")
# #         return
    
# #     # t√™n ng∆∞·ªùi d√πng lu√¥n in hoa
# #     ten_nguoi_dung = context.args[0].upper()
# #     tai_khoan = context.args[1]
# #     try:
# #         gia_tri = int(context.args[2])
# #     except ValueError:
# #         await update.message.reply_text("Gi√° tr·ªã ph·∫£i l√† s·ªë nguy√™n!")
# #         return

# #     ket_qua = f"/W {tai_khoan} - OWS {ten_nguoi_dung} - {gia_tri} - 5D"
# #     await update.message.reply_text(ket_qua)

# # def main():
# #     app = Application.builder().token(TOKEN).build()
# #     app.add_handler(CommandHandler("start", start))
# #     app.add_handler(CommandHandler("nhap", nhap))
# #     app.run_polling()

# # if __name__ == "__main__":
# #     main()import sqlite3
import os
from datetime import datetime
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from openpyxl import Workbook, load_workbook

TOKEN = "8470587261:AAFSLT4uWXd9iuC-r5wv1XwEHvv8L4qI-AQ"
FILE_NAME = "ketqua.xlsx"

# H√†m l∆∞u v√†o Excel
def save_to_excel(nguoi_dung, tai_khoan, gia_tri, ket_qua):
    thoi_gian = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # N·∫øu file ch∆∞a t·ªìn t·∫°i -> t·∫°o m·ªõi v·ªõi header
    if not os.path.exists(FILE_NAME):
        wb = Workbook()
        ws = wb.active
        ws.title = "Nh·∫≠p d·ªØ li·ªáu"
        ws.append(["Th·ªùi gian", "Ng∆∞·ªùi d√πng", "T√†i kho·∫£n", "Gi√° tr·ªã", "K·∫øt qu·∫£"])
        wb.save(FILE_NAME)

    # Ghi th√™m d·ªØ li·ªáu m·ªõi
    wb = load_workbook(FILE_NAME)
    ws = wb.active
    ws.append([thoi_gian, nguoi_dung, tai_khoan, gia_tri, ket_qua])
    wb.save(FILE_NAME)

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "Ch√†o b·∫°n! Nh·∫≠p theo c√∫ ph√°p:\n/nhap <T√™nNg∆∞·ªùiD√πng> <T√†iKho·∫£n> <S·ªëNguy√™n>"
    )

# /nhap
async def nhap(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if len(context.args) < 3:
        await update.message.reply_text(
            "‚ùå Sai c√∫ ph√°p!\nV√≠ d·ª•: /nhap Kunz hiha123 123"
        )
        return
    
    ten_nguoi_dung = context.args[0].upper()  # In hoa
    tai_khoan = context.args[1]

    try:
        gia_tri = int(context.args[2])
    except ValueError:
        await update.message.reply_text("‚ùå Gi√° tr·ªã ph·∫£i l√† s·ªë nguy√™n!")
        return

    ket_qua = f"/W {tai_khoan} - OWS {ten_nguoi_dung} - {gia_tri} - 5D"

    # Tr·∫£ l·∫°i tin nh·∫Øn v·ª´a nh·∫≠p
    tin_nhan_nhap = (
        f"B·∫°n v·ª´a nh·∫≠p:\n"
        f"üë§ T√™n: {ten_nguoi_dung}\n"
        f"üí≥ T√†i kho·∫£n: {tai_khoan}\n"
        f"üí∞ Gi√° tr·ªã: {gia_tri}\n"
        f"üìÑ K·∫øt qu·∫£: {ket_qua}"
    )
    await update.message.reply_text(tin_nhan_nhap)

    # L∆∞u v√†o Excel
    save_to_excel(ten_nguoi_dung, tai_khoan, gia_tri, ket_qua)

    # Th√¥ng b√°o l∆∞u th√†nh c√¥ng
    await update.message.reply_text("‚úÖ ƒê√£ l∆∞u th√†nh c√¥ng v√†o ketqua.xlsx!")

# Main
def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("nhap", nhap))
    app.run_polling()

if __name__ == "__main__":
    main()
